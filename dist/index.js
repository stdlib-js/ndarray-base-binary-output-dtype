"use strict";var h=function(i,a){return function(){return a||i((a={exports:{}}).exports,a),a.exports}};var b=h(function(R,I){
var _=require('@stdlib/ndarray-base-assert-is-floating-point-data-type/dist'),y=require('@stdlib/ndarray-base-assert-is-real-floating-point-data-type/dist'),v=require('@stdlib/ndarray-base-assert-is-complex-floating-point-data-type/dist'),T=require('@stdlib/ndarray-base-assert-is-integer-data-type/dist'),d=require('@stdlib/ndarray-base-assert-is-signed-integer-data-type/dist'),p=require('@stdlib/ndarray-base-assert-is-unsigned-integer-data-type/dist'),D=require('@stdlib/ndarray-base-assert-is-real-data-type/dist'),c=require('@stdlib/ndarray-base-assert-is-numeric-data-type/dist'),m=require('@stdlib/ndarray-base-assert-is-boolean-data-type/dist'),E=require('@stdlib/ndarray-base-assert-is-integer-index-data-type/dist'),x=require('@stdlib/ndarray-base-assert-is-boolean-index-data-type/dist'),q=require('@stdlib/ndarray-base-assert-is-mask-index-data-type/dist'),w=require('@stdlib/ndarray-base-assert-is-data-type/dist'),o=require('@stdlib/ndarray-promotion-rules/dist'),e=require('@stdlib/ndarray-defaults/dist'),s=require('@stdlib/error-tools-fmtprodmsg/dist'),P=e.get("dtypes.default"),F=e.get("dtypes.default_index"),u=e.get("dtypes.signed_integer"),l=e.get("dtypes.unsigned_integer"),f=e.get("dtypes.real_floating_point"),L={floating_point:[_,e.get("dtypes.floating_point")],floating_point_and_generic:[n(_),e.get("dtypes.floating_point")],real_floating_point:[y,f],real_floating_point_and_generic:[n(y),f],complex_floating_point:[v,e.get("dtypes.complex_floating_point")],complex_floating_point_and_generic:[n(v),e.get("dtypes.complex_floating_point")],integer:[T,e.get("dtypes.integer")],integer_and_generic:[n(T),e.get("dtypes.integer")],signed_integer:[d,u],signed_integer_and_generic:[n(d),u],unsigned_integer:[p,l],unsigned_integer_and_generic:[n(p),l],real:[D,e.get("dtypes.real")],real_and_generic:[n(D),e.get("dtypes.real")],numeric:[c,e.get("dtypes.numeric")],numeric_and_generic:[n(c),e.get("dtypes.numeric")],boolean:[m,e.get("dtypes.boolean")],boolean_and_generic:[n(m),e.get("dtypes.boolean")],integer_index:[E,e.get("dtypes.integer_index")],integer_index_and_generic:[n(E),e.get("dtypes.integer_index")],boolean_index:[x,e.get("dtypes.boolean_index")],boolean_index_and_generic:[n(x),e.get("dtypes.boolean_index")],mask_index:[q,e.get("dtypes.mask_index")],mask_index_and_generic:[n(q),e.get("dtypes.mask_index")]};function n(i){return a;function a(r){return r==="generic"||i(r)}}function N(i,a,r){var t,g;if(r==="default")return P;if(r==="default_index")return F;if(r==="same"){if(i!==a)throw new Error(s('invalid arguments. Unable to resolve an output data type. The output data type policy is "same" and yet the input data types are not equal. Data types: [%s, %s].',i,a));return i}if(w(r))return r;if(t=o(i,a),t===null||t===-1)throw new Error(s("invalid arguments. Unable to apply type promotion rules when resolving a data type to which the input data types can be safely cast. Data types: [%s, %s].",i,a));if(r==="promoted")return t;if(r==="accumulation")return _(t)||t==="generic"?t:p(t)?o(t,l):d(t)?o(t,u):f;if(g=L[r],g===void 0)throw new TypeError(s("invalid argument. Third argument must be a supported data type policy. Value: `%s`.",r));return g[0](t)?t:g[1]}I.exports=N
});var U=b();module.exports=U;
/** @license Apache-2.0 */
//# sourceMappingURL=index.js.map
