{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar outputDataType = require( '@stdlib/ndarray-base-output-dtype' );\n\n\n// MAIN //\n\n/**\n* Resolves the output ndarray data type for a binary function.\n*\n* @param {string} xdtype - first input ndarray data type\n* @param {string} ydtype - second input ndarray data type\n* @param {string} policy - output ndarray data type policy\n* @throws {TypeError} third argument must be a recognized data type policy\n* @throws {Error} must provide data types amenable to type promotion\n* @returns {string} output ndarray data type\n*\n* @example\n* var dt = resolve( 'float64', 'float32', 'complex_floating_point' );\n* // returns <string>\n*/\nfunction resolve( xdtype, ydtype, policy ) {\n\treturn outputDataType( [ xdtype, ydtype ], policy );\n}\n\n\n// EXPORTS //\n\nmodule.exports = resolve;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Resolve the output ndarray data type for a binary function.\n*\n* @module @stdlib/ndarray-base-binary-output-dtype\n*\n* @example\n* var resolve = require( '@stdlib/ndarray-base-binary-output-dtype' );\n*\n* var dt = resolve( 'float64', 'float32', 'complex_floating_point' );\n* // returns <string>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,mCAAoC,EAmBlE,SAASC,EAASC,EAAQC,EAAQC,EAAS,CAC1C,OAAOJ,EAAgB,CAAEE,EAAQC,CAAO,EAAGC,CAAO,CACnD,CAKAL,EAAO,QAAUE,ICdjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "outputDataType", "resolve", "xdtype", "ydtype", "policy", "main"]
}
