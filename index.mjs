// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-floating-point-data-type@v0.2.2-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-floating-point-data-type@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-complex-floating-point-data-type@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-integer-data-type@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-signed-integer-data-type@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-unsigned-integer-data-type@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-real-data-type@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-numeric-data-type@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-boolean-data-type@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-integer-index-data-type@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-boolean-index-data-type@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-mask-index-data-type@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-promotion-rules@v0.3.0-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-defaults@v0.3.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";var f=_.get("dtypes.default"),j=_.get("dtypes.default_index"),u=_.get("dtypes.signed_integer"),b=_.get("dtypes.unsigned_integer"),h=_.get("dtypes.real_floating_point"),x={floating_point:[e,_.get("dtypes.floating_point")],floating_point_and_generic:[v(e),_.get("dtypes.floating_point")],real_floating_point:[t,h],real_floating_point_and_generic:[v(t),h],complex_floating_point:[n,_.get("dtypes.complex_floating_point")],complex_floating_point_and_generic:[v(n),_.get("dtypes.complex_floating_point")],integer:[s,_.get("dtypes.integer")],integer_and_generic:[v(s),_.get("dtypes.integer")],signed_integer:[i,u],signed_integer_and_generic:[v(i),u],unsigned_integer:[r,b],unsigned_integer_and_generic:[v(r),b],real:[a,_.get("dtypes.real")],real_and_generic:[v(a),_.get("dtypes.real")],numeric:[d,_.get("dtypes.numeric")],numeric_and_generic:[v(d),_.get("dtypes.numeric")],boolean:[o,_.get("dtypes.boolean")],boolean_and_generic:[v(o),_.get("dtypes.boolean")],integer_index:[p,_.get("dtypes.integer_index")],integer_index_and_generic:[v(p),_.get("dtypes.integer_index")],boolean_index:[g,_.get("dtypes.boolean_index")],boolean_index_and_generic:[v(g),_.get("dtypes.boolean_index")],mask_index:[l,_.get("dtypes.mask_index")],mask_index_and_generic:[v(l),_.get("dtypes.mask_index")]};function v(e){return function(t){return"generic"===t||e(t)}}function w(t,n,s){var a,d;if("default"===s)return f;if("default_index"===s)return j;if("same"===s){if(t!==n)throw new Error(c('invalid arguments. Unable to resolve an output data type. The output data type policy is "same" and yet the input data types are not equal. Data types: [%s, %s].',t,n));return t}if(m(s))return s;if(null===(a=y(t,n))||-1===a)throw new Error(c("invalid arguments. Unable to apply type promotion rules when resolving a data type to which the input data types can be safely cast. Data types: [%s, %s].",t,n));if("promoted"===s)return a;if("accumulation"===s)return e(a)||"generic"===a?a:r(a)?y(a,b):i(a)?y(a,u):h;if(void 0===(d=x[s]))throw new TypeError(c("invalid argument. Third argument must be a supported data type policy. Value: `%s`.",s));return d[0](a)?a:d[1]}export{w as default};
//# sourceMappingURL=index.mjs.map
